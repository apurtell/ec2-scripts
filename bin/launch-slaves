#!/usr/bin/env bash

type=c3.8xlarge
label=slave
nrhosts=1
monitoring=
secgroup=default
placementgroup=cluster
price=1.0
zone=
ami=
on_demand=
keypair=`whoami`

while [[ $# -gt 0 ]] ; do
  case "$1" in
    -t | --type)           type="$2"; shift;;
    -h | --hosts)          nrhosts="$2"; shift;;
    -m | --monitoring)     monitoring=yes;;
    -g | --placementgroup) placementgroup="$2"; shift;;
    -s | --secgroup)       secgroup="$2"; shift;;
    -p | --price)          price="$2"; shift;;
    -z | --zone)           zone="$2"; shift;;
    -o | --on-demand)      on_demand=y ;;
    -k | --keypair)        keypair="$2"; shift;;
    --ami)                 ami="$2"; shift;;
    --)                    shift; break;;
    -*)                    shift;;
    *)                     break;;
  esac
  shift
done

if [[ $# -gt 0 ]] ; then
  MASTER_HOST=$1
  shift
else
  echo "usage: launch-slaves <master> <count>" && exit 1
fi

if [[ $# -gt 0 ]] ; then
  nrhosts=$1
  shift
else
  echo "usage: launch-slaves <master> <count>" && exit 1
fi

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
if [[ -f "$bin"/credentials.sh ]] ; then
  source "$bin"/credentials.sh
fi
source "$bin"/env.sh

echo "TYPE: $type"
echo "MASTER_HOST: $MASTER_HOST"

if [[ ! -z $ami ]] ; then
  AMI=$ami
fi

echo "AMI: $AMI"

[[ -z $AMI ]] && echo "No AMI found" && exit 1

rm -f /tmp/userdata$$
echo "#!/bin/bash" >> /tmp/userdata$$
echo "JAVA_URL=$JAVA_URL" >> /tmp/userdata$$
echo "HADOOP_URL=$HADOOP_URL" >> /tmp/userdata$$
echo "HBASE_URL=$HBASE_URL" >> /tmp/userdata$$
echo "YCSB_URL=$YCSB_URL" >> /tmp/userdata$$
echo "MASTER_HOST=$MASTER_HOST" >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-slave-remote.pre >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-remote >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-slave-remote.post >> /tmp/userdata$$
gzip -9 /tmp/userdata$$

if [[ ! -z "$on_demand" ]] ; then
  CMD="ec2-run-instances $AMI $TOOL_OPTS -n $nrhosts -k $keypair -t $type -g $secgroup --placement-group $placementgroup -f /tmp/userdata$$.gz"
else
  CMD="ec2-request-spot-instances $AMI $TOOL_OPTS -n $nrhosts -k $keypair -t $type -g $secgroup --placement-group $placementgroup -p $price -f /tmp/userdata$$.gz"
fi
# need to specify ephemeral drive mappings or they won't appear
CMD="$CMD -b /dev/sdb=ephemeral0 -b /dev/sdc=ephemeral1 -b /dev/sdd=ephemeral2 -b /dev/sde=ephemeral3"
[[ ! -z "$monitoring" ]] && CMD="$CMD -m"
[[ ! -z "$zone" ]] && CMD="$CMD -z $zone"
OUTPUT=`$CMD`
echo $OUTPUT
rm -f /tmp/userdata$$.gz

# Get the DNS names of the slaves we launched, if they are on-demand instances.
# Figuring out instance identifiers from spot instance requests is an extra step,
# punt
if [[ ! -z "$on_demand" ]] ; then
  echo -n "Getting slave instance hostnames: "
  declare -a hosts
  declare -a instances
  # compound array assignment
  instances=(`echo $OUTPUT | tr ' ' '\n' | grep 'i\-[0-9a-f]' | grep -v ami`)
  [[ ${#instances[@]} -ne $nrhosts ]] && echo "Error: Not enough instance identifiers found!" && exit 1
  while true ; do
    i=0
    found=0
    until [[ $i -eq $nrhosts ]] ; do
      if [[ -z "${hosts[$i]}" ]] ; then
        hosts[$i]=`ec2-describe-instances $TOOL_OPTS ${instances[$i]} | grep running | awk '{print $4}'`
      else
        ((found++))
      fi
      ((i++))
    done
    [[ $found -eq $nrhosts ]] && break
    echo -n "."
  done
  echo
  i=0
  while [[ $i -lt $nrhosts ]] ; do
    echo "${instances[$i]} ${hosts[$i]}"
    ((i++))
  done
fi
