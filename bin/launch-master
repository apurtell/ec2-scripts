#!/usr/bin/env bash

type=c3.4xlarge
label=master
secgroup=default
placementgroup=cluster
monitoring=
zone=
ami=
keypair=

while [[ $# -gt 0 ]] ; do
  case "$1" in
    -t | --type)           type="$2"; shift;;
    -m | --monitoring)     monitoring=yes;;
    -g | --placementgroup) placementgroup="$2"; shift;;
    -s | --secgroup)       secgroup="$2"; shift;;
    -z | --zone)           zone="$2"; shift;;
    --ami)                 ami="$2"; shift;;
    -k | --keypair)        keypair="$2"; shift;;
    --)                    shift; break;;
    -*)                    shift;;
    *)                     break;;
  esac
  shift
done

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
source "$bin"/env.sh
[[ -f "$bin"/credentials.sh ]] && source "$bin"/credentials.sh

echo "TYPE: $type"

[[ ! -z "$ami" ]] && AMI=$ami

echo "AMI: $AMI"

[[ -z "$AMI" ]] && echo "No AMI found" && exit 1

if [[ -z "$keypair" ]] ; then
  keypair=${EC2_KEYNAME:=`whoami`}
fi
echo "KEYNAME: $keypair"

rm -f /tmp/userdata$$
echo "#!/bin/bash" >> /tmp/userdata$$
echo "JAVA_URL=$JAVA_URL" >> /tmp/userdata$$
echo "HADOOP_URL=$HADOOP_URL" >> /tmp/userdata$$
echo "HBASE_URL=$HBASE_URL" >> /tmp/userdata$$
echo "YCSB_URL=$YCSB_URL" >> /tmp/userdata$$
echo "PHOENIX_URL=$PHOENIX_URL" >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-master-remote.pre >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-remote >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-master-remote.post >> /tmp/userdata$$
gzip -9 /tmp/userdata$$

CMD="ec2-run-instances $AMI --region $REGION --aws-access-key $AWS_ACCESS_KEY --aws-secret-key $AWS_SECRET_KEY --request-timeout $REQUEST_TIMEOUT -k $keypair -t $type -g $secgroup --placement-group $placementgroup -f /tmp/userdata$$.gz"
# allocate a 100 GB EBS volume for /var/log, will be deleted at termination
CMD="$CMD -b /dev/sdf=:100:true:gp2"
# need to specify ephemeral drive mappings or they won't appear
CMD="$CMD -b /dev/sdb=ephemeral0 -b /dev/sdc=ephemeral1 -b /dev/sdd=ephemeral2 -b /dev/sde=ephemeral3"
[[ ! -z "$monitoring" ]] && CMD="$CMD -m"
[[ ! -z "$zone" ]] && CMD="$CMD -z $zone"
OUTPUT=`$CMD`
INSTANCE=`echo $OUTPUT | awk '{print $6}'`
echo $OUTPUT

rm -f /tmp/userdata$$.gz

echo -n "Polling server status "
while true; do
  printf "."
  HOSTNAME=`ec2-describe-instances --region $REGION --aws-access-key $AWS_ACCESS_KEY --aws-secret-key $AWS_SECRET_KEY --request-timeout $REQUEST_TIMEOUT $INSTANCE | grep running | awk '{print $4}'`
  [[ ! -z $HOSTNAME ]] && break;
  sleep 1
done
echo

echo -n "Uploading private key "
while true ; do
  printf "."
  scp -i $EC2_PRIVATE_KEY $SSH_OPTS $EC2_PRIVATE_KEY ec2-user@$HOSTNAME:~/.ssh/identity > /dev/null 2>&1
  [[ $? -eq 0 ]] && break
  sleep 1
done
# Set up SSH configuration on master
ssh -i $EC2_PRIVATE_KEY $SSH_OPTS ec2-user@$HOSTNAME 'echo "Host *" > ~/.ssh/config ; echo "  IdentityFile /home/ec2-user/.ssh/identity" >> ~/.ssh/config ; chmod 600 ~/.ssh/config' 
echo

echo "MASTER HOSTNAME: $HOSTNAME"
