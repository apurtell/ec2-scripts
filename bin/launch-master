#!/usr/bin/env bash

type=c3.4xlarge
label=master
secgroup=default
placementgroup=cluster
monitoring=
zone=
ami=
keypair=`whoami`

while [[ $# -gt 0 ]] ; do
  case "$1" in
    -t | --type)           type="$2"; shift;;
    -m | --monitoring)     monitoring=yes;;
    -g | --placementgroup) placementgroup="$2"; shift;;
    -s | --secgroup)       secgroup="$2"; shift;;
    -z | --zone)           zone="$2"; shift;;
    --ami)                 ami="$2"; shift;;
    -k | --keypair)        keypair="$2"; shift;;
    --)                    shift; break;;
    -*)                    shift;;
    *)                     break;;
  esac
  shift
done

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`
export bin
[[ -f "$bin"/credentials.sh ]] && source "$bin"/credentials.sh
source "$bin"/env.sh

echo "TYPE: $type"

[[ ! -z $ami ]] && AMI=$ami

echo "AMI: $AMI"

[[ -z $AMI ]] && echo "No AMI found" && exit 1

rm -f /tmp/userdata$$
echo "#!/bin/bash" >> /tmp/userdata$$
echo "JAVA_URL=$JAVA_URL" >> /tmp/userdata$$
echo "HADOOP_URL=$HADOOP_URL" >> /tmp/userdata$$
echo "HBASE_URL=$HBASE_URL" >> /tmp/userdata$$
echo "YCSB_URL=$YCSB_URL" >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-master-remote.pre >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-remote >> /tmp/userdata$$
cat "$bin"/image/tarball/setup-master-remote.post >> /tmp/userdata$$
gzip -9 /tmp/userdata$$

CMD="ec2-run-instances $AMI $TOOL_OPTS -k $keypair -t $type -g $secgroup --placement-group $placementgroup -f /tmp/userdata$$.gz"
# need to specify ephemeral drive mappings or they won't appear
CMD="$CMD -b /dev/sdb=ephemeral0 -b /dev/sdc=ephemeral1 -b /dev/sdd=ephemeral2 -b /dev/sde=ephemeral3"
[[ ! -z "$monitoring" ]] && CMD="$CMD -m"
[[ ! -z "$zone" ]] && CMD="$CMD -z $zone"
OUTPUT=`$CMD`
INSTANCE=`echo $OUTPUT | awk '{print $6}'`
echo $OUTPUT

rm -f /tmp/userdata$$.gz

echo -n "Polling server status "
while true; do
  printf "."
  HOSTNAME=`ec2-describe-instances $TOOL_OPTS $INSTANCE | grep running | awk '{print $4}'`
  [[ ! -z $HOSTNAME ]] && break;
  sleep 1
done
echo

echo -n "Uploading private key "
while true ; do
  printf "."
  scp $SSH_OPTS $EC2_PRIVATE_KEY ec2-user@$HOSTNAME:~/.ssh/identity > /dev/null 2>&1
  [[ $? -eq 0 ]] && break
  sleep 1
done
echo

echo "MASTER HOSTNAME: $HOSTNAME"
